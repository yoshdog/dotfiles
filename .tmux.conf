# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind-key a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

bind-key n      command-prompt 'rename-window "%%"'

set -g default-terminal "xterm-256color"

# set status bar
set-option -g status-interval 1
set-option -g status-style fg=colour12,bg=default
set-option -g status-left-style default
set-option -g status-right-style default
bind-key / set-option status

set -g status-left ""
set-option -g status-right '#[fg=yellow][#S] #[fg=magenta][#H] #[fg=green][#{battery_percentage} #{battery_remain}]#[fg=white] %H:%M'

set -g status-interval 30
set-option -g status-right-length 100
set-option -g status-left-length 120

# highlight active window
set-window-option -g window-status-current-style fg=colour4,bold,bg=default
set-window-option -g window-status-current-format '[ #I #W ]'

set-window-option -g window-status-bell-style fg=colour226,bg=colour23

# pane border
set-option -g pane-border-style fg=colour240
set-option -g pane-active-border-style fg=colour240

# renumber windows
set-option -g renumber-windows on

# starts windows at 1 not 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

set -g history-limit 100000

# messages
set-option -g message-style fg=colour0,bg=colour4
set-option -g display-time 5000

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Bring back kill line under tmux prefix
bind C-k send-keys 'C-k'

# Mouse support
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Toggle mouse on
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'

# use vi-style key bindings in the status line
set -g status-keys vi

# use - and | for splitting
unbind-key "\""
unbind-key %
bind-key - split-window -c "#{pane_current_path}"
bind-key _ split-window -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"

# resizing panes
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

run-shell ~/dev/tmux-battery/battery.tmux

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
